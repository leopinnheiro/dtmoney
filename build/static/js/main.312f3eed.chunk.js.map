{"version":3,"sources":["assets/logo.svg","components/Header/styles.ts","components/Header/index.tsx","styles/global.ts","components/Dashboard/styles.ts","assets/income.svg","assets/outcome.svg","assets/total.svg","components/Summary/styles.ts","components/Summary/index.tsx","services/api.ts","components/TransactionsTable/styles.ts","components/TransactionsTable/index.tsx","components/Dashboard/index.tsx","assets/close.svg","components/NewTransactionModal/styles.ts","components/NewTransactionModal/index.tsx","App.tsx","index.tsx"],"names":["Container","styled","header","Content","div","Header","onOpenNewTransactionModal","src","logoImg","alt","type","onClick","GlobalStyle","createGlobalStyle","main","Summary","incomeImg","outcomeImg","className","totalImg","api","axios","create","baseURL","TransactionsTable","useEffect","get","then","response","console","log","data","Dashboard","form","TransactionTypeContainer","colors","green","red","RadioBox","button","props","isActive","transparentize","activeColor","darken","NewTransactionModal","isOpen","onRequestClose","useState","setType","overlayClassName","closeImg","placeholder","App","isNewTransactionModalOpen","setIsNewTransactionModalOpen","Modal","setAppElement","createServer","routes","this","namespace","id","title","amount","category","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.312f3eed.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.614d71d1.svg\";","import styled from \"styled-components\";\n\nexport const Container = styled.header`\n  background: var(--blue);\n`;\n\nexport const Content = styled.div`\n  max-width: 1120px;\n  margin: 0 auto;\n\n  padding: 2rem 1rem 12rem;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n\n  button {\n    font-size: 1rem;\n    color: var(--white);\n    background: var(--blue-light);\n    border: 0;\n    padding: 0 2rem;\n    border-radius: 0.25rem;\n    height: 3rem;\n    \n    transition: filter 0.2s;\n\n    &:hover {\n      filter: brightness(0.9);\n    }\n  }\n`;","import logoImg from \"../../assets/logo.svg\";\nimport { Container, Content } from \"./styles\";\n\ninterface HeaderProps {\n  onOpenNewTransactionModal: () => void;\n}\n\nexport function Header({ onOpenNewTransactionModal } : HeaderProps) {\n  return (\n    <Container>\n      <Content>\n        <img src={logoImg} alt=\"dtmoney\" />\n        <button type=\"button\" onClick={onOpenNewTransactionModal}>\n          Nova transação\n        </button>\n      </Content>\n    </Container>\n  )\n};","import { createGlobalStyle } from 'styled-components';\n\nexport const GlobalStyle = createGlobalStyle`\n  :root {\n    --background: #F0F2F5;\n    --red: #E52E4D;\n    --blue: #5429CC;\n    --white: #FFFFFF;\n    --green: #33CC95;\n\n    --blue-light: #6933FF;\n\n    --text-title: #363F5F;\n    --text-body: #969CB3;\n\n    --shape: #FFFFFF;\n\n    --input-background: #E7E9EE;\n    --border: #D7D7D7;\n  }\n\n  * {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n  }\n\n  //font-size: 16px (Desktop)\n  html {\n    @media (max-width: 1080px) {\n      font-size: 93.75%; // 15px\n    }\n\n    @media (max-width: 720px) {\n      font-size: 87.5%; // 14px\n    }\n  }\n\n  body {\n    background: var(--background);\n    -webkit-font-smoothing: antialiased;\n  }\n\n  body, input, textarea, button {\n    font-family: 'Poppins', sans-serif;\n    font-weight: 400;\n  }\n\n  h1, h2, h3, h4, h5, h6, strong {\n    font-weight: 600;\n  }\n\n  button {\n    cursor: pointer;\n  }\n\n  [disabled]{\n    opacity: 0.6;\n    cursor: not-allowed;\n  }\n\n  .react-modal-overlay {\n    background: rgba(0, 0, 0, 0.5);\n\n    position: fixed;\n    top: 0;\n    bottom: 0;\n    right: 0;\n    left: 0;\n\n    display: flex;\n    align-items: center;\n    justify-content: center;\n  }\n\n  .react-modal-content {\n    width: 100%;\n    max-width: 576px;\n    background: var(--background);\n    padding: 3rem;\n    position: relative;\n    border-radius: 0.25rem;\n  }\n\n  .react-modal-close {\n    position: absolute;\n    right: 1.5rem;\n    top: 1.5rem;\n    border: 0;\n    background: transparent;\n\n    transition: filter 0.2s;\n\n    &:hover {\n      filter: brightness(0.7);\n    }\n  }\n`;","import styled from \"styled-components\";\n\nexport const Container = styled.main`\n  max-width: 1120px;\n  margin: 0 auto;\n  padding: 2.5rem 1rem;\n`;","export default __webpack_public_path__ + \"static/media/income.d58effe2.svg\";","export default __webpack_public_path__ + \"static/media/outcome.6eb96d30.svg\";","export default __webpack_public_path__ + \"static/media/total.e90c2d1e.svg\";","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  gap: 2rem;\n  margin-top: -10rem;\n\n  div {\n    background: var(--shape);\n    padding: 1.5rem 2rem;\n    border-radius: 0.25rem;\n    color: var(--text-title);\n\n    header {\n      display: flex;\n      align-items: center;\n      justify-content: space-between;\n    }\n\n    strong {\n      display: block;\n      margin-top: 1rem;\n      font-size: 2rem;\n      font-weight: 500;\n      line-height: 3rem;\n    }\n\n    &.highlight-background {\n      background: var(--green);\n      color: var(--white);\n    }\n  }\n`;","import incomeImg from '../../assets/income.svg';\nimport outcomeImg from '../../assets/outcome.svg';\nimport totalImg from '../../assets/total.svg';\n\nimport { Container } from \"./styles\";\n\nexport function Summary() {\n  return (\n    <Container>\n      <div>\n        <header>\n          <p>Entradas</p>\n          <img src={incomeImg} alt=\"Entradas\" />\n        </header>\n        <strong>R$ 1000,00</strong>\n      </div>\n      <div>\n        <header>\n          <p>Saídas</p>\n          <img src={outcomeImg} alt=\"Saídas\" />\n        </header>\n        <strong>-R$ 500,00</strong>\n      </div>\n      <div className=\"highlight-background\">\n        <header>\n          <p>Total</p>\n          <img src={totalImg} alt=\"Total\" />\n        </header>\n        <strong>R$ 500,00</strong>\n      </div>\n    </Container>\n  );\n}","import axios from \"axios\";\n\nexport const api = axios.create({\n  baseURL: 'http://localhost:3000/api'\n})","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  margin-top: 4rem;\n\n  table {\n    width: 100%;\n    border-spacing: 0 0.5rem;\n\n    th {\n      color: var(--text-body);\n      font-weight: 400;\n      padding: 1rem 2rem;\n      text-align: left;\n      line-height: 1.5rem;\n    }\n\n    td {\n      padding: 1rem 2rem;\n      border: 0;\n      background: var(--shape);\n      font-weight: 400;\n      color: var(--text-body);\n      border-radius: 0.25rem;\n\n      &:first-child {\n        color: var(--text-title);\n      }\n\n      &.deposit {\n        color: var(--green);\n      }\n\n      &.withdraw {\n        color: var(--red);\n      }\n    }\n  }\n`;","import { useEffect } from \"react\";\nimport { api } from \"../../services/api\";\nimport { Container } from \"./styles\";\n\nexport function TransactionsTable() {\n  useEffect(() => {\n    api.get('/transactions')\n      .then(response => console.log(response.data));\n  },[]);\n\n  return (\n    <Container>\n      <table>\n        <thead>\n          <tr>\n            <th>Título</th>\n            <th>Valor</th>\n            <th>Categoria</th>\n            <th>Data</th>\n          </tr>\n        </thead>\n\n        <tbody>\n          <tr>\n            <td>Desenvolvimento de site</td>\n            <td className=\"deposit\">R$ 12.000,00</td>\n            <td>Venda</td>\n            <td>14/04/2021</td>\n          </tr>\n          <tr>\n            <td>Hamburguer</td>\n            <td className=\"withdraw\">-R$ 59,00</td>\n            <td>Alimentação</td>\n            <td>10/04/2021</td>\n          </tr>\n          <tr>\n            <td>Aluguel</td>\n            <td className=\"withdraw\">-R$ 1.200,00</td>\n            <td>Despesas fixas</td>\n            <td>05/04/2021</td>\n          </tr>\n          <tr>\n            <td>Venda de computador</td>\n            <td className=\"deposit\">R$ 5.400,00</td>\n            <td>Venda</td>\n            <td>13/04/2021</td>\n          </tr>\n        </tbody>\n      </table>\n    </Container>\n  );\n}","import { Container } from \"./styles\";\nimport { Summary } from \"../Summary\";\nimport { TransactionsTable } from \"../TransactionsTable\";\n\nexport function Dashboard() {\n  return (\n    <Container>\n      <Summary />\n      <TransactionsTable />\n    </Container>\n  );\n}","export default __webpack_public_path__ + \"static/media/close.f62862c6.svg\";","import styled from \"styled-components\";\nimport { darken, transparentize } from \"polished\";\n\nexport const Container = styled.form`\n  h2 {\n    color: var(--text-title);\n    font-size: 1.5rem;\n    margin-bottom: 2rem;\n  }\n\n  input {\n    width: 100%;\n    padding: 0 1.5rem;\n    height: 4rem;\n    border-radius: 0.25rem;\n\n    border: 1px solid var(--border);\n    background: var(--input-background);\n\n    font-weight: 400;\n    font-size: 1rem;\n\n    &::placeholder {\n      color: var(--text-body);\n    }\n\n    & + input {\n      margin-top: 1rem;\n    }\n  }\n\n  button[type=\"submit\"] {\n    width: 100%;\n    padding: 0 1.5rem;\n    height: 4rem;\n    background: var(--green);\n    color: var(--white);\n    border-radius: 0.25rem;\n    border: 0;\n    font-size: 1rem;\n    margin-top: 1.5rem;\n    font-weight: 600;\n\n    transition: filter 0.2s;\n\n    &:hover {\n      filter: brightness(0.9);\n    }\n  }\n`;\n\nexport const TransactionTypeContainer = styled.div`\n  margin: 1rem 0;\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  gap: 0.5rem;\n`;\n\n\ninterface RadioBoxProps {\n  isActive: boolean;\n  activeColor: 'green' | 'red';\n}\n\nconst colors = {\n  green: '#33CC95',\n  red: '#E52E4D'\n}\n\nexport const RadioBox = styled.button<RadioBoxProps>`\n  height: 4rem;\n  border: 1px solid var(--border);\n  border-radius: 0.25rem;\n\n  background: ${(props) => props.isActive\n    ? transparentize(0.9, colors[props.activeColor])\n    : 'transparent'};\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  transition: border-color 0.2s;\n\n  &:hover {\n    border-color: ${darken(0.1, '#D7D7D7')};\n  }\n\n  img {\n    width: 20px;\n    height: 20px;\n  }\n\n  span {\n    display: inline-block;\n    margin-left: 1rem;\n    font-size: 1rem;\n    color: var(--text-title);\n  }\n`;","import Modal from \"react-modal\";\nimport incomeImg from '../../assets/income.svg';\nimport outcomeImg from '../../assets/outcome.svg';\nimport closeImg from '../../assets/close.svg';\nimport { Container, TransactionTypeContainer, RadioBox } from \"./styles\";\nimport { useState } from \"react\";\n\ninterface NewTransactionModalProps {\n  isOpen: boolean;\n  onRequestClose: () => void;\n}\n\nexport function NewTransactionModal({ isOpen, onRequestClose }: NewTransactionModalProps) {\n  const [type, setType] = useState('deposit');\n\n  function handleSetTypeDeposit(){\n    setType('deposit');\n  }\n  function handleSetTypeWithdraw(){\n    setType('withdraw');\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onRequestClose={onRequestClose}\n      overlayClassName=\"react-modal-overlay\"\n      className=\"react-modal-content\"\n    >\n      <button\n        type=\"button\"\n        onClick={onRequestClose}\n        className=\"react-modal-close\"\n      >\n        <img src={closeImg} alt=\"Fechar modal\" />\n      </button>\n      <Container>\n        <h2>Cadastrar transação</h2>\n        <input\n          placeholder=\"Título\"\n        />\n        <input\n          type=\"number\"\n          placeholder=\"Valor\"\n        />\n        \n        <TransactionTypeContainer>\n          <RadioBox\n            type=\"button\"\n            onClick={handleSetTypeDeposit}\n            isActive={type === 'deposit'}\n            activeColor=\"green\"\n          >\n            <img src={incomeImg} alt=\"Entrada\" />\n            <span>Entrada</span>\n          </RadioBox>\n          <RadioBox\n            type=\"button\"\n            onClick={handleSetTypeWithdraw}\n            isActive={type === 'withdraw'}\n            activeColor=\"red\"\n          >\n            <img src={outcomeImg} alt=\"Saída\" />\n            <span>Saída</span>\n          </RadioBox>\n        </TransactionTypeContainer>\n\n        <input\n          placeholder=\"Categoria\"\n        />\n        <button type=\"submit\">Cadastrar</button>\n      </Container>\n    </Modal>\n  )\n}","import { useState } from \"react\";\nimport Modal from \"react-modal\";\nimport { Header } from \"./components/Header\";\nimport { GlobalStyle } from \"./styles/global\";\nimport { Dashboard } from \"./components/Dashboard\";\nimport { NewTransactionModal } from './components/NewTransactionModal';\n\nModal.setAppElement('#root');\n\nexport function App() {\n  const [isNewTransactionModalOpen, setIsNewTransactionModalOpen] = useState(false);\n\n  function handleOpenNewTransactionModal() {\n    setIsNewTransactionModalOpen(true);\n  }\n\n  function handleCloseNewTransactionModal() {\n    setIsNewTransactionModalOpen(false);\n  }\n  \n  return (\n    <>\n      <Header onOpenNewTransactionModal={handleOpenNewTransactionModal} />\n      <Dashboard />\n\n      <NewTransactionModal\n        isOpen={isNewTransactionModalOpen}\n        onRequestClose={handleCloseNewTransactionModal}\n      />\n\n      <GlobalStyle />\n    </>\n  );\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\nimport { createServer } from \"miragejs\";\n\ncreateServer({\n  routes() {\n    this.namespace = 'api';\n\n    this.get('/transactions', () => {\n      return [\n        {\n          id: 1,\n          title: 'Transacao 1',\n          amount: 400,\n          type: 'deposit',\n          category: 'Alimentação'\n        }\n      ]\n    })\n  }\n})\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}